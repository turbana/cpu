;;
;;	Assembler Test
;;
;;	These binary values must match the entire .o file
;;
;;	Magic Header Word 1		; 1101 1110 1010 1101 | (1)
;;	Magic Header Word 2		; 1111 0000 0000 1101 | (2)
;;	Data chunk count		; 0000 0000 0000 0000 | (3)
;;	Instruction chunk count		; 0000 0000 0000 0001 | (4)
;;	 \ Chunk address		; 0000 0000 0000 0000 | (5)
;;	 \ Chunk length			; 0000 0000 0011 0000 | (6) 48
start:	ldw	$1, b10110($2)		; 1000 0101 1001 0001 | (7)
	stw	(end-24)($0), $4	; 1010 0101 0100 0100 | (8) 21
	jmp	end			; 1111 1000 0010 1011 | (9) 43
	add	$1, $2, $3		; 0000 0001 1001 0001 | (10)
	add	$6, $7, 7		; 0000 0011 1111 1110 | (11)
	sub	$3, $0, $1		; 0000 1000 1000 0011 | (12)
	sub	$7, $5, -2		; 0000 1111 0110 1111 | (13)
	and	$2, $4, $0		; 0001 0000 0010 0010 | (14)
	and	$7, $1, -7		; 0001 0100 1100 1111 | (15)
	or	$3, $1, $4		; 0001 1010 0000 1011 | (16)
	or	$4, $1, 1		; 0001 1000 1100 1100 | (17)
	shl	$7, $4, $1		; 0010 0000 1010 0111 | (18)
	shl	$3, $1, 6		; 0010 0011 0100 1011 | (19)
	shr	$1, $6, $7		; 0010 1011 1011 0001 | (20)
	shr	$7, $2, 1		; 0010 1000 1101 0111 | (21)
	sar	$1, $6, 3		; 0011 0001 1111 0001 | (22)
	xor	$3, $5, (010/4)		; 0011 1001 0110 1011 | (23) 2
	s.eq	$1, $4			; 0100 0010 0000 1000 | (24)
	s.ne	$4, 5			; 0100 0010 1110 0001 | (25)
	s.lt	$5, -1			; 0100 0111 1110 1100 | (26)
	s.lte	$4, $0			; 0100 0000 0010 0101 | (27)
	s.gt	$3, $7			; 0100 0011 1001 1010 | (28)
	s.gte	$7, -8			; 0100 0100 0111 1011 | (29)
	s.ult	$3, 7			; 0100 0011 1101 1110 | (30)
	s.ulte	$4, $6			; 0100 0011 0010 0111 | (31)
	as.z	$1, $3, $5		; 0100 1010 1001 1001 | (32)
	as.z	$4, $7, 3		; 0100 1001 1111 1100 | (33)
	as.nz	$0, $0, $0		; 0101 0000 0000 0000 | (34)
	as.nz	$1, $5, -2		; 0101 0111 0110 1001 | (35)
	jmp	$1($2)			; 0101 1000 1001 0000 | (36)
	ldw	$3, $4($1)		; 0110 0010 0000 1011 | (37)
	ldw	$5, 1($3)		; 1000 0000 0101 1101 | (38)
	stw	$4($1), $2		; 0110 1010 0000 1010 | (39)
	stw	-1($1), $5		; 1011 1111 1100 1101 | (40)
	ldiw	$1, $2($4)		; 0111 0001 0010 0001 | (41)
	stiw	3($3), $7		; 0111 1001 1101 1111 | (42)
	ldw	$1, 63($4)		; 1000 1111 1110 0001 | (43)
	stw	-64($0), $5		; 1011 0000 0000 0101 | (44)
	lcr	$1, $cr1		; 1100 0000 0000 1001 | (45)
	scr	$cr0, $3		; 1100 1000 0001 1000 | (46)
	iret				; 1101 0000 0000 0000 | (47)
	halt				; 1101 1000 0000 0000 | (48)
	lui	$6, 0x0F		; 1110 0000 0111 1110 | (49)
	addi	$3, 0xF0		; 1110 1111 1000 0011 | (50)
	trap				; 1111 0000 0000 0000 | (51)
end:	jmp	start			; 1111 1111 1101 0011 | (52) -45
	jmp	0			; 1111 1000 0000 0000 | (53)
	add	$0, $0, $0		; 0000 0000 0000 0000 | (54)
